{"version":3,"sources":["ShogiBoard.tsx","NumberToBoardApp.tsx","RandomHighlightApp.tsx","reportWebVitals.ts","index.tsx"],"names":["translateXCoordinate","index","translateYCoordinate","Dot","x","y","css","ShogiBoard","highlight","onCellClick","cellWidth","Array","map","e","file","rank","color","onClick","ev","NumberToBoardApp","useState","targetCoordinate","setTargetCoordinate","started","setStarted","setHighlight","next","Math","floor","random","i","kanjiNums","setTimeout","RandomHighlightApp","props","state","interval","this","start","bind","type","pattern","value","onChange","setState","target","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","to","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.1f1d3372.chunk.js","sourcesContent":["/* @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { css } from '@emotion/react'\n\ntype Props = {\n\thighlight: {\n\t\tfile: number, // 筋\n\t\trank: number,  // 段\n\t\tcolor: string\n\t} | null,\n\tonCellClick?: ((file: number, rank: number) => void)\n}\n\nconst cellWidth = 40\nconst cellHeight = 44\n\nconst translateXCoordinate = (index: number) => {\n\treturn 9 - index\n}\n\nconst translateYCoordinate = (index: number) => {\n\treturn index + 1\n}\n\ntype DotProps = {\n\tx: number,\n\ty: number\n}\n\nconst Dot: React.FC<DotProps> = ({ x, y }) => {\n\treturn <div css={css`\n    position: absolute;\n    width: 5px;\n    height: 5px;\n    border-radius: 50%;\n    background: #000;\n    top: ${cellHeight * x - 2}px;\n    left: ${cellWidth * y - 2}px;\n  `}></div>\n}\n\nconst ShogiBoard: React.FC<Props> = ({ highlight, onCellClick }) => (\n\t<div css={css`\n    position: relative;\n    * {\n      box-sizing: border-box;\n    }\n    width: ${cellWidth * 9 + 1}px;\n    margin: auto;\n  `}>\n\t\t<table css={css`\n      table-layout: fixed;\n      border-collapse: collapse;\n      border-spacing: 0;\n    `}>\n\t\t\t<tbody>\n\t\t\t\t{[...Array(9)].map((e, y) => {\n\t\t\t\t\treturn <tr key={y}>\n\t\t\t\t\t\t{[...Array(9)].map((e, x) => {\n\t\t\t\t\t\t\treturn <td key={x}\n\t\t\t\t\t\t\t\tcss={css`\n                  background: ${highlight && (highlight.file === translateXCoordinate(x) && highlight.rank === translateYCoordinate(y)) ? highlight.color : '#ffefd5'};\n                  width: ${cellWidth}px;\n                  height: ${cellHeight}px;\n                  border: solid 1px #000;\n                  transition: background-color 0.2s linear;\n                `}\n\t\t\t\t\t\t\t\tonClick={(ev) => { if (onCellClick) { onCellClick(translateXCoordinate(x), translateYCoordinate(y)) } }}\n\t\t\t\t\t\t\t></td>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Dot x={3} y={3} />\n\t\t<Dot x={3} y={6} />\n\t\t<Dot x={6} y={3} />\n\t\t<Dot x={6} y={6} />\n\t</div>\n);\n\nexport default ShogiBoard;\n","/* @jsxImportSource @emotion/react */\nimport React, { useState } from 'react';\nimport ShogiBoard from './ShogiBoard';\nimport { css } from '@emotion/react'\n\nfunction NumberToBoardApp() {\n  type CoordinateType = {\n    file: number | null,\n    rank: number | null\n  }\n\n  const [targetCoordinate, setTargetCoordinate] = useState<CoordinateType>({\n    file: null,\n    rank: null\n  });\n  const [started, setStarted] = useState<boolean>(false);\n\n  type HighlightType = {\n    file: number,\n    rank: number,\n    color: string\n  } | null\n  const [highlight, setHighlight] = useState<HighlightType>(null);\n\n  function answer(file: number, rank: number) {\n    if (!started) {\n      return\n    }\n    if (targetCoordinate.file === file && targetCoordinate.rank === rank) {\n      setHighlight({\n        file,\n        rank,\n        color: '#7fffff'\n      })\n      setTimeout(() => next(), 100)\n    } else {\n      setHighlight({\n        file,\n        rank,\n        color: '#ff7f7f'\n      })\n    }\n    setTimeout(() => setHighlight(null), 400)\n  }\n\n  function next() {\n    setTargetCoordinate({\n      file: 1 + Math.floor(Math.random() * 9),\n      rank: 1 + Math.floor(Math.random() * 9)\n    });\n  }\n\n  function start() {\n    setStarted(true)\n    next()\n  }\n\n  const kanjiNums = ['一', '二', '三', '四', '五', '六', '七', '八', '九']\n  function toKanjiNumber(i: number) {\n    return kanjiNums[i - 1]\n  }\n\n  return (\n    <div>\n      <div css={css`margin: 40px auto 16px`}>\n        <ShogiBoard\n          highlight={highlight}\n          onCellClick={answer} />\n      </div>\n      <div css={css`text-align: center`}>\n        {started ?\n          <div css={css`font-size: 2em; font-weight: bold;`}>\n            {targetCoordinate.file}{toKanjiNumber(targetCoordinate.rank!)}\n          </div> :\n          <div>\n            <button onClick={start}>Start</button>\n          </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default NumberToBoardApp;\n","/* @jsxImportSource @emotion/react */\nimport React from 'react';\nimport ShogiBoard from './ShogiBoard';\nimport { css } from '@emotion/react'\n\ntype CoordinateType = {\n  file: number | null,\n  rank: number | null\n}\ntype State = {\n  targetCoordinate: CoordinateType,\n  started: boolean,\n  interval: number\n}\n\nclass RandomHighlightApp extends React.Component<any, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      targetCoordinate: {\n        file: null,\n        rank: null\n      },\n      started: false,\n      interval: 1000\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div css={css`margin: 40px auto 16px`}>\n          <ShogiBoard\n            highlight={this.state.targetCoordinate ? {\n              file: this.state.targetCoordinate.file!,\n              rank: this.state.targetCoordinate.rank!,\n              color: '#7fffff'\n            } : null} />\n        </div>\n        <div css={css`text-align: center`}>\n          {this.state.started ?\n            <div></div> :\n            <div>\n              <button onClick={this.start.bind(this)}>Start</button>\n            </div>}\n          <input\n            type=\"number\"\n            pattern=\"\\d*\"\n            value={this.state.interval}\n            onChange={(ev) => this.setState({ interval: +ev.target.value })}\n            css={css`\n                  width: 100px;\n                `} /> ms\n        </div>\n      </div>\n    )\n  }\n\n  start() {\n    this.setState((state) => ({\n      started: true\n    }))\n    this.next()\n  }\n\n  next() {\n    this.setState((state) => ({\n      targetCoordinate: {\n        file: 1 + Math.floor(Math.random() * 9),\n        rank: 1 + Math.floor(Math.random() * 9)\n      }\n    }))\n    setTimeout(() => this.next(), this.state.interval)\n  }\n}\n\nexport default RandomHighlightApp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NumberToBoardApp from './NumberToBoardApp';\nimport RandomHighlightApp from './RandomHighlightApp';\nimport reportWebVitals from './reportWebVitals';\nimport { Link } from 'react-router-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ul>\n        <li><Link to=\"/number-to-board\">符号から将棋盤の位置をタップ</Link></li>\n        <li><Link to=\"/board-to-number\">将棋盤の位置をランダムでハイライト</Link></li>\n      </ul>\n      <Route path=\"/number-to-board\" component={NumberToBoardApp} />\n      <Route path=\"/board-to-number\" component={RandomHighlightApp} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}